public class project_S extends java.lang.Object
{

    public static java.lang.String hello(java.lang.String, java.lang.String, java.lang.String, int)
    {
        java.lang.String s3, s5, s6, s4, s8, s9, s2, temp$3, temp$6, s11, s10, non, harsh;
        int s7;
        java.util.Scanner in, temp$0;
        java.io.InputStream temp$1;
        java.io.PrintStream temp$2, temp$4;
        java.lang.StringBuffer temp$5;

        s3 := @parameter0: java.lang.String;
        s5 := @parameter1: java.lang.String;
        s6 := @parameter2: java.lang.String;
        s7 := @parameter3: int;
        temp$0 = new java.util.Scanner;
        temp$1 = <java.lang.System: java.io.InputStream in>;
        specialinvoke temp$0.<java.util.Scanner: void <init>(java.io.InputStream)>(temp$1);
        in = temp$0;
        temp$2 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$2.<java.io.PrintStream: void println(java.lang.String)>("Enter a string");
        temp$3 = virtualinvoke in.<java.util.Scanner: java.lang.String nextLine()>();
        s2 = temp$3;
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>(s2);
        s4 = s3;
        temp$5 = new java.lang.StringBuffer;
        specialinvoke temp$5.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(s2);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(s3);
        temp$6 = virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.String toString()>();
        s8 = temp$6;
        s9 = s6;
        s11 = "";
        s10 = s11;
        non = "1";
        harsh = "ss";
        if non == "1" goto label0;

        goto label1;

     label0:
        nop;
        return s2;

     label1:
        nop;
        if non == "2" goto label2;

        goto label3;

     label2:
        nop;
        return s9;

     label3:
        nop;
        return s3;
    }

    public static void hello2(java.lang.String)
    {
        java.lang.String d, d1, temp$1;
        java.io.PrintStream temp$0;

        d := @parameter0: java.lang.String;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>(d);
        temp$1 = staticinvoke <project_S: java.lang.String hello(java.lang.String,java.lang.String,java.lang.String,int)>("1", "2", "3", 1);
        d1 = temp$1;
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args, temp$7;
        java.lang.String s, temp$3, hell, harshit, temp$6, ss, ss1, temp$9, c, temp$10, temp$11;
        java.util.Scanner in, temp$0;
        java.io.InputStream temp$1;
        java.io.PrintStream temp$2, temp$4;
        java.lang.StringBuffer temp$5;
        int temp$8, ss4;

        args := @parameter0: java.lang.String[];
        temp$0 = new java.util.Scanner;
        temp$1 = <java.lang.System: java.io.InputStream in>;
        specialinvoke temp$0.<java.util.Scanner: void <init>(java.io.InputStream)>(temp$1);
        in = temp$0;
        temp$2 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$2.<java.io.PrintStream: void println(java.lang.String)>("Enter a string");
        temp$3 = virtualinvoke in.<java.util.Scanner: java.lang.String nextLine()>();
        s = temp$3;
        hell = "";
        harshit = "";
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        temp$5 = new java.lang.StringBuffer;
        specialinvoke temp$5.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(s);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("this is    ");
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(s);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("hello harsh");
        temp$6 = virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>(temp$6);
        temp$7 = args;
        temp$8 = 0;
        ss = temp$7[temp$8];
        ss4 = 1;
        ss1 = "1";
        temp$9 = staticinvoke <project_S: java.lang.String hello(java.lang.String,java.lang.String,java.lang.String,int)>(ss, ss1, s, ss4);
        temp$10 = staticinvoke <project_S: java.lang.String hello(java.lang.String,java.lang.String,java.lang.String,int)>(s, ss, ss1, ss4);
        c = temp$10;
        temp$11 = staticinvoke <project_S: java.lang.String hello(java.lang.String,java.lang.String,java.lang.String,int)>(ss, s, ss1, ss4);
        return;
    }

    public void <init>()
    {
        project_S this;

        this := @this: project_S;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }
}
