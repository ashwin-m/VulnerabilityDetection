

import soot.BodyTransformer;
import soot.Pack;
import soot.PackManager;
import soot.Scene;
import soot.SootClass;
import soot.SootResolver;
import soot.Transform;
import soot.options.Options;

public class DriverClass {

	/**
	 * @param args
	 */
	
	
	//private static final BodyTransformer analysis = new Wrapper();
	private static final String SRC_DIR = "/home/aditya/workspace/Copy of Project_start1/src:";
	//private static final String SRC_DIR = "C:\\Users\\Harsh\\Desktop\\DHCS\\workspacedhcs_final\\Project_start1\\src;";


	
	
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		PackManager.v().getPack("jtp")
//		.add(new Transform("jtp.instrumenter", new Wrapper()));
//		
//		
//		if(args.length==0)
//		{
//			System.err.println("Usage: java MainDriver [options] classname");
//			System.exit(0);
//		}
//		//SootClass abc=Scene.v().loadClassAndSupport("LiveFlow");
//		Options.v().setPhaseOption("jb", "use-original-names:true");
//		Pack jtp=PackManager.v().getPack("jtp");
//		jtp.add(new Transform("jtp.instrumenter", new Wrapper()));
//		SootResolver.v().resolveClass("java.lang.CloneNotSupportedException", SootClass.SIGNATURES);
//		Options.v().set_output_format(Options.output_format_jimple);
//		System.out.println(Scene.v().getSootClassPath());
//		soot.Main.main(args);
		
		
		
		
		
		
		if (args.length < 1) {
			throw new IllegalArgumentException(
					"The name of the test class was not provided.");
		}

		// Add a new phase.
		PackManager.v().getPack("jtp")
				.add(new Transform("jtp.instrumenter", new Wrapper()));

		// Set options to keep the original variable names, output Jimple, use
		// the Java source and update the class path.
		Options.v().setPhaseOption("jb", "use-original-names");
		Options.v().set_output_format(Options.output_format_J);
		Options.v().set_src_prec(Options.src_prec_java);
		Scene.v().setSootClassPath(
				DriverClass.SRC_DIR + Scene.v().getSootClassPath());

		// Load the given class.
		SootClass class_analyze = Scene.v().loadClassAndSupport(args[0]);

		// Get the class name.
		System.out.println("Loaded Class: " + class_analyze.getName() + "\n");

		// Start the analysis.
		soot.Main.main(args);
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

}
